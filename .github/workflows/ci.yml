name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16, 18, 20]
        
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Type checking
      run: npx tsc --noEmit
      
    - name: Lint code
      run: npx eslint src --ext .ts,.tsx --max-warnings 10
      
    - name: Run unit tests
      run: npm test -- --coverage --watchAll=false --testTimeout=10000
      
    - name: Upload coverage to Codecov
      if: matrix.node-version == 18
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        
    - name: Build application
      run: npm run build
      
    - name: Check build artifacts
      run: |
        if [ ! -d "build" ]; then
          echo "Build directory not found"
          exit 1
        fi
        if [ ! -f "build/index.html" ]; then
          echo "index.html not found in build"
          exit 1
        fi
        echo "Build artifacts verified successfully"

  accessibility-audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Serve build and run accessibility tests
      run: |
        npx serve -s build -p 3000 &
        sleep 5
        npx @axe-core/cli http://localhost:3000 --exit
        
  performance-audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Analyze bundle size
      run: |
        npx webpack-bundle-analyzer build/static/js/*.js --mode static --report bundle-report.html --no-open
        BUNDLE_SIZE=$(du -sk build/static/js/*.js | awk '{sum += $1} END {print sum}')
        echo "Total bundle size: ${BUNDLE_SIZE}KB"
        
        # Set performance budget limits
        if [ $BUNDLE_SIZE -gt 500 ]; then
          echo "❌ Bundle size ${BUNDLE_SIZE}KB exceeds 500KB limit"
          exit 1
        else
          echo "✅ Bundle size ${BUNDLE_SIZE}KB is within 500KB limit"
        fi