name: Staging Deployment

on:
  push:
    branches: [ develop, staging ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  staging-deploy:
    runs-on: ubuntu-latest
    
    environment:
      name: staging
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test -- --coverage --watchAll=false --testTimeout=10000
      
    - name: Build application
      run: npm run build
      env:
        REACT_APP_ENVIRONMENT: staging
        
    - name: Add staging banner
      run: |
        echo '<div style="background: #ff6b35; color: white; text-align: center; padding: 10px; font-weight: bold;">STAGING ENVIRONMENT - NOT FOR PRODUCTION USE</div>' > staging-banner.html
        sed -i '/<body>/r staging-banner.html' build/index.html
        
    - name: Deploy to staging
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build
        publish_branch: gh-pages-staging
        force_orphan: true
        
    - name: Comment PR with staging URL
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'ðŸš€ Staging deployment available at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}'
          })